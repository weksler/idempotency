genrule(
    name = "flyway-migrate-for-codegen",
    srcs = [
        "//resources/db/sql:flyway-migrations",
        "flyway.conf",
        "@maven-deps//:org_flywaydb_flyway_core",
        "@maven-deps//:org_flywaydb_flyway_commandline",
        "@maven-deps//:org_xerial_sqlite_jdbc",
        "@maven-deps//:com_google_code_gson_gson",
    ],
    outs = ["idempotency_schema.db"],
    cmd = """mkdir sql && cp resources/db/sql/* sql && \
$(ABSOLUTE_JAVABASE)/bin/java -cp \
$(location @maven-deps//:org_flywaydb_flyway_core):\
$(location @maven-deps//:com_google_code_gson_gson):\
$(location @maven-deps//:org_flywaydb_flyway_commandline):\
$(location @maven-deps//:org_xerial_sqlite_jdbc) \
org.flywaydb.commandline.Main \
-configFiles=$(location flyway.conf) \
-url=jdbc:sqlite:$@ \
-locations=filesystem:sql \
-jarDirs=sql \
migrate""",
    message = "Creating DB schema based on migrations",
)

genrule(
    name = "daos",
    srcs = [
        "@maven-deps//:org_jooq_jooq",
        "@maven-deps//:org_jooq_jooq_meta",
        "@maven-deps//:org_jooq_jooq_codegen",
        "@maven-deps//:org_reactivestreams_reactive_streams",
        "@maven-deps//:io_r2dbc_r2dbc_spi",
        "@maven-deps//:org_xerial_sqlite_jdbc",
        "@maven-deps//:javax_xml_bind_jaxb_api",
        "@maven-deps//:jakarta_xml_bind_jakarta_xml_bind_api",
        "idempotency_schema.db",
        "jooq_config.xml",
    ],
    outs = ["idempotency-daos.srcjar"],
    cmd = """$(ABSOLUTE_JAVABASE)/bin/java -cp \
$(location @maven-deps//:javax_xml_bind_jaxb_api):\
$(location @maven-deps//:jakarta_xml_bind_jakarta_xml_bind_api):\
$(location @maven-deps//:org_jooq_jooq_codegen):\
$(location @maven-deps//:org_jooq_jooq):\
$(location @maven-deps//:org_jooq_jooq_meta):\
$(location @maven-deps//:org_reactivestreams_reactive_streams):\
$(location @maven-deps//:io_r2dbc_r2dbc_spi):\
$(location @maven-deps//:org_xerial_sqlite_jdbc) \
-Djooq.codegen.jdbc.url=jdbc:sqlite:$(location idempotency_schema.db) \
org.jooq.codegen.GenerationTool $(location jooq_config.xml) && \
jar cvf $@ com
    """,
    message = "Generating jOOQ DAOs from schema",
    visibility = ["//visibility:public"],
)

exports_files(["flyway.conf"])
