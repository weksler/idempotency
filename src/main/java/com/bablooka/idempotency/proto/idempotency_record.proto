// Idempotency record
syntax = "proto3";

package com.bablooka.idempotency.proto;

option java_multiple_files = true;

import "google/protobuf/timestamp.proto";

message IdempotencyRecord {
  // An idempotency key
  string idempotencyKey = 1;

  // Fingerprint of the RPC call, to ensure this is indeed a retry
  string requestFingerprint = 2;

  enum Status {
    // The request is executing, the caller has not heard back yet.
    EXECUTING = 0;

    // The request finished executing and has sent back a resonse to the caller, which was recorded in `rpcResponse`.
    RESPONDED = 1;

    // The request failed, but can be retried by the caller.
    FAILED_RETRIABLE = 2;

    // The request failed and can not be retried by the caller.
    FAILED_NON_RETRIABLE = 3;
  }
  Status status =3;

  // Timestamp of when the lease on this record expires
  google.protobuf.Timestamp leaseExpiresAt = 4;

  // The response to the RPC call, to be returned in case of a retry
  bytes rpcResponse = 5;
}
